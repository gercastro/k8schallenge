name: Build and Push Docker image

on:
  push:
    branches:
      - dev
      - prod

permissions:
  id-token: write
  contents: write
  checks: write
  pull-requests: write
  statuses: write
  actions: write

env:
  DOCKERHUB_USERNAME: dapasa #{{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: dckr_pat_bm46Fd5wUql0KsMbQvbZiNi4JjE #{{ secrets.DOCKERHUB_TOKEN }}
jobs:
  set_environment:
    name: Set Environment
    runs-on: ubuntu-latest
    steps:
    - id: setenv
      run: |
        echo "image_repository_name=nginx-custom-html" >> $GITHUB_OUTPUT
        echo "env=dev" >> $GITHUB_OUTPUT
        if [ ${GITHUB_REF##*/} == "prod" ]; then 
            echo "env=prod" >> $GITHUB_OUTPUT 
        fi
        echo Ref: ${GITHUB_REF##*/}

    outputs:
      env: ${{ steps.setenv.outputs.env }}
      image_repository_name: ${{ steps.setenv.outputs.image_repository_name }}

  make_version:
    name: Version
    needs: [set_environment]
    if: needs.set_environment.outputs.env == 'prod' || needs.set_environment.outputs.env == 'dev'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: Make Version
        id: create_version
        uses: paulhatch/semantic-version@v5.4.0
        env:
            ENVIROMENT: ${{ needs.set_environment.outputs.env }}
            VERSION_FORMAT_FOR_PROD: "${major}.${minor}.${patch}"
            VERSION_FORMAT_FOR_NOT_PROD: "${major}.${minor}.${patch}-${{ needs.set_environment.outputs.env }}${increment}"
        with:
          tag_prefix: "v"
          major_pattern: "!:"
          minor_pattern: /patch|feat/
          minor_regexp_flags: "gm"
          version_format: ${{ needs.set_environment.outputs.env != 'prod' && env.VERSION_FORMAT_FOR_NOT_PROD || env.VERSION_FORMAT_FOR_PROD }}
          user_format_type: "csv"
          bump_each_commit: true
          bump_each_commit_patch_pattern: "fix"
          search_commit_body: true
          debug: true
    
      - name: Check Versions
        run: |
          echo "Major: ${{ steps.create_version.outputs.major }}"
          echo "Minor: ${{ steps.create_version.outputs.minor }}"
          echo "Patch: ${{ steps.create_version.outputs.patch }}"
          echo "Increment: ${{ steps.create_version.outputs.increment }}"
          echo "Version Type: ${{ steps.create_version.outputs.version_type }}"
          echo "Major: ${{ steps.create_version.outputs.major }}"
          echo "Version: ${{ steps.create_version.outputs.version }}"
          echo "Version Tag: ${{ steps.create_version.outputs.version_tag }}"
          echo "Is Tagged: ${{ steps.create_version.outputs.is_tagged }}"
          echo "Changed: ${{ steps.create_version.outputs.changed }}"
          echo "Authors: ${{ steps.create_version.outputs.authors }}"
          echo "Current Commit: ${{ steps.create_version.outputs.current_commit }}"
          echo "Previous Commit: ${{ steps.create_version.outputs.previous_commit }}"
          echo "Previous Version: ${{ steps.create_version.outputs.previous_version }}"

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          custom_tag: ${{ steps.create_version.outputs.version }}
          tag_prefix: "v"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: ${{ needs.set_environment.outputs.env }}

    outputs:
      version: ${{ steps.tag_version.outputs.new_tag }}
      changelog: ${{ steps.tag_version.outputs.changelog }}

  make_release:
    name: Make Release
    needs: [make_version]
    if: needs.make_version.outputs.version == 'prod'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Create Release
        uses: ncipollo/release-action@v1.16.0
        with:
          tag: ${{ needs.make_version.outputs.version }}
          name: Release ${{ needs.make_version.outputs.version }}
          body: ${{ needs.make_version.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: ubuntu-latest
    needs: [set_environment, make_version]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1

      - name: Login to Docker Hub
        uses: docker/login-action@v3.4.0
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/${{ needs.set_environment.outputs.image_repository_name }}:${{ needs.make_version.outputs.version }}

  